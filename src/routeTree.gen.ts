/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as MainLayoutRouteImport } from './app/routes/_mainLayout'
import { Route as AuthLayoutRouteImport } from './app/routes/_authLayout'
import { Route as MainLayoutIndexRouteImport } from './app/routes/_mainLayout/index'
import { Route as MainLayoutResourcesRouteImport } from './app/routes/_mainLayout/resources'
import { Route as AuthLayoutLoginRouteImport } from './app/routes/_authLayout/login'

const MainLayoutRoute = MainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutIndexRoute = MainLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutResourcesRoute = MainLayoutResourcesRouteImport.update({
  id: '/resources',
  path: '/resources',
  getParentRoute: () => MainLayoutRoute,
} as any)
const AuthLayoutLoginRoute = AuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLayoutLoginRoute
  '/resources': typeof MainLayoutResourcesRoute
  '/': typeof MainLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLayoutLoginRoute
  '/resources': typeof MainLayoutResourcesRoute
  '/': typeof MainLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/_authLayout/login': typeof AuthLayoutLoginRoute
  '/_mainLayout/resources': typeof MainLayoutResourcesRoute
  '/_mainLayout/': typeof MainLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/resources' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/resources' | '/'
  id:
    | '__root__'
    | '/_authLayout'
    | '/_mainLayout'
    | '/_authLayout/login'
    | '/_mainLayout/resources'
    | '/_mainLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/': {
      id: '/_mainLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/resources': {
      id: '/_mainLayout/resources'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof MainLayoutResourcesRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_authLayout/login': {
      id: '/_authLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
  }
}

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface MainLayoutRouteChildren {
  MainLayoutResourcesRoute: typeof MainLayoutResourcesRoute
  MainLayoutIndexRoute: typeof MainLayoutIndexRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutResourcesRoute: MainLayoutResourcesRoute,
  MainLayoutIndexRoute: MainLayoutIndexRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  MainLayoutRoute: MainLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
