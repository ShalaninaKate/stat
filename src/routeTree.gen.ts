/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as IndexRouteImport } from './app/routes/index'
import { Route as TeamIndexRouteImport } from './app/routes/team/index'
import { Route as TeamTeamidRouteImport } from './app/routes/team/$teamid'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./app/routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamIndexRoute = TeamIndexRouteImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamTeamidRoute = TeamTeamidRouteImport.update({
  id: '/team/$teamid',
  path: '/team/$teamid',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/team/$teamid': typeof TeamTeamidRoute
  '/team': typeof TeamIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/team/$teamid': typeof TeamTeamidRoute
  '/team': typeof TeamIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/team/$teamid': typeof TeamTeamidRoute
  '/team/': typeof TeamIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/team/$teamid' | '/team'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/team/$teamid' | '/team'
  id: '__root__' | '/' | '/about' | '/team/$teamid' | '/team/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  TeamTeamidRoute: typeof TeamTeamidRoute
  TeamIndexRoute: typeof TeamIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/': {
      id: '/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/$teamid': {
      id: '/team/$teamid'
      path: '/team/$teamid'
      fullPath: '/team/$teamid'
      preLoaderRoute: typeof TeamTeamidRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  TeamTeamidRoute: TeamTeamidRoute,
  TeamIndexRoute: TeamIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
